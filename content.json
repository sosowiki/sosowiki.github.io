{"pages":[{"title":"","text":"","link":"/about/index.html"},{"title":"标签","text":"","link":"/tags/index.html"},{"title":"分类","text":"","link":"/categories/index.html"}],"posts":[{"title":"好未来面试题","text":"好未来面试题 一面1、说一下optional。（？ ！ ？？ 几种解包方式 if let、guard、？？等） 2、说一下闭包。 3、比较代理、通知、KVO？这三个谁的效率最高，谁的效率最低？( KVO 效率最低，因为 Runtime ） 4、NSString 和 String 的区别？（ String 是值类型，NSString 是引用类型） 5、Swift 跟 OC 的区别？（ OC 是动态的语言，Swift 是静态的语言）OC 是面向对象的，Swift 呢？（面向对象、面向协议、响应式编程）解释一下面向协议编程？ 6、说一下 MRC ？自动释放池？自动释放池什么时候释放？（我说 drain ） 7、说一下多线程？（我提到了 dispatch_once 单例） 8、分别用 OC 和 Swift 手写一下单例。（ Swift 的单例我忘记写 static 了，但是经提醒立马说出来了） 9、SnaptKit 内部看过吗？ 10、链式语法的实现。 UIView.top.equalTo().offSet(10) UIView.left.equalTo().offSet(10) 为什么能写成UIView.top.left.offSet(10) 二面主要是手写算法题： 1、用两个栈实现队列。 2、从扑克牌中抽出5张，写一个方法判断是不是顺子。（如34567）大小王是万能的，可以替代任意数字。 三面项目经理 四面HR","link":"/好未来面试题/"},{"title":"开果科技面试题","text":"开果科技面试题 一面1、卡顿原因、解决办法。为什么透明视图不如不透明视图？ 2、闪退原因、监测、过程。友盟是怎么捕获闪退的？从一个事件到闪退发生了什么？ 3、图片的压缩，从600k到500k，不能设置固定压缩比，应该怎么做？压缩图片，压缩图片实际压缩的是哪些东西？加载超大图；图片在计算机中的存储形式；10M的图片加载到内存中是多大？大图是怎么加载的？ 图像文件存储的都是每一个像素对应的颜色值。 4、字典的本质？哈希表原理？ 哈希表。 5、链表和数组，哪个容易找到地址？ 数组。 在内存中，数组是一块连续的区域。插入和删除数据效率低。随机读取效率很高，因为数组是连续的，知道每一个数据的内存地址，可以直接找到给地址的数据。 链表增加和删除数据很容易。查找数据时效率低，因为不具有随机访问性。 6、列表有好多页，某一页和后边加载的一页中有相同的数据，怎么处理？ 7、动态库和静态库的区别。 8、设计模式。 二面(电话面试)1、什么时候开始接触 iOS？怎么学的iOS？ 2、公司多少人？什么项目？ 3、你会选择什么样的公司？ 4、数据库（SQLite/Realm）是怎么保证线程安全的？ 5、UserDeafaults 系统做了哪些优化？为什么可以在主线程上去做存取？如果让你实现，方法已经是同步的方法了，你会怎么处理？ 6、+load 和 +initialize 方法什么时候会调用，+load 和 +initialize 方法、main 方法这三个的调用顺序。 7、@class 和 #import 在编译的时候有哪些区别？ 8、JSON 转 Model 你用的是什么？MJExtension 字典转模型的具体步骤？拿到字典了，第一步做什么，第二步做什么？ 9、WebView 跟 JS 是怎么交互的？ 10、WebView 怎么存 cookie？ 11、A-&gt;B-&gt;C-&gt;D 从D返回到B。说几个不同的实现思路。 方案1：for 循环 self.navigationController.viewControllers 判断某个控制器是否是 B 如果是就 popToViewController:B。 方案2：self.navigationController.viewControllers 是一个不可变数组，可以赋值给一个可变的数组，然后把 C 移除，然后再赋值给 viewControllers。 其他方案：提示不一定要 push，present出来的怎么弄？ 12、二分查找。 13、深拷贝与浅拷贝，某个值得改变可能会影响原始值，那是深拷贝还是浅拷贝？ 14、性能优化？图片加载到 UIImageView 上经过了哪些过程？ 15、Label 怎么多行显示。 16、Button有哪些状态？ 17、dispatch_group_notify 是在哪个线程上？","link":"/开果科技面试题/"},{"title":"好未来面试题及答案","text":"好未来面试题 1. 一面1、说一下optional。?! ?? 是什么意思？有几种解包方式？ 解包方式：if let、guard、?? 等。 2、说一下闭包。 3、比较代理、通知、KVO？这三个谁的效率最高，谁的效率最低？ KVO 效率最低，因为 Runtime。 4、NSString 和 String 的区别？ String 是值类型，NSString 是引用类型。 5、Swift 跟 OC 的区别？OC 是面向对象的，Swift 呢？（面向对象、面向协议、响应式编程）解释一下面向协议编程？ OC 是动态的语言，Swift 是静态的语言。 6、说一下 MRC ？自动释放池？自动释放池什么时候释放？ 7、说一下多线程？ 8、分别用 OC 和 Swift 手写一下单例。 9、SnaptKit 内部看过吗？ 10、链式语法的实现。 UIView.top.equalTo().offSet(10) UIView.left.equalTo().offSet(10) 为什么能写成UIView.top.left.offSet(10) 2. 二面主要是手写算法题： 1、用两个栈实现队列。 2、从扑克牌中抽出5张，写一个方法判断是不是顺子。（如34567）大小王是万能的，可以替代任意数字。 3. 三面项目经理聊项目 4. 四面HR问了很多问题，包括个人优缺点，闲暇时间会做什么，在前公司3年的成长等等。","link":"/好未来面试题及答案/"},{"title":"ofo面试题","text":"ofo面试题 1、block 的底层实现? 2、block 的类型有哪几种? 3、你碰到的 block 的循环引用? 4、为什么你在用 Masonry , AFNetworking 的 block 回调不需要对 self 进行 __weak? 5、出现野指针的情况大概有哪些？ 6、Swift 里的闭包和 OC 的 block 的区别。 7、Sqlite 使用的时候需要注意什么。","link":"/ofo面试题/"},{"title":"京东面试题","text":"京东面试题 1、AFNetworking 是如何实现多线程的。 2、如何自己控制 AFNetWorking 的多线程，如果解决上传多张图片引起的内存剧增的问题。 3、模块化的实现过程。 4、自动化测试。 5、数据库的升级（当前数据库不能满足业务了，1.0-&gt;2.0-&gt;3.0…..）。","link":"/京东面试题/"},{"title":"微店面试题","text":"微店面试题 1. 一面1、说项目里的有价值的东西？ 2、HTTPS 过程是怎么样的？非对称加密 3、Swift 中逃逸闭包和非逃逸闭包的区别？ 4、属性用 copy 关键字，是深拷贝还是浅拷贝？深拷贝和浅拷贝的区别？ 5、SDWebImage 的缓存机制？LRU 内部原理？下载完成图片后，是先存到内存、磁盘后，才显示到界面上吗？ 6、AFN 用到了 NSOperation、GCD，说一下内部 Operation 相关的？Manager？ 7、GCD 内部实现？ 8、约束 left/right 和 leading/trailing 的区别？约束报黄怎么解决？ 9、KVO 的原理？具体 NSObject 的两个方法？ 10、消息转发流程？使用场景？ 11、数据库减字段怎么容错？ 12、有没有打包过私有库？ 13、从点击 App 的图标到 App 启动，说一下这个过程？+load 发生在什么时候？ 14、用什么管理第三方库？CocoaPods 中的 .lock 文件存储了什么信息？ 15、说一下一个项目的架构？ 16、组件化？ 17、手写冒泡排序算法？算法复杂度？ 2. 二面1、项目介绍，开发人员分工？购物车本地化如果加入购物车的价格变了怎么处理的？ 2、写一下其中一个项目的项目架构？写一下用到的第三方库。 3、项目用什么管理的？CocoaPods 指定版本号带 ~ 跟不带 ~各有什么含义？ 4、AFN 实现原理？发10个网络请求，AFN 内部是怎么处理的？ 5、SDWebImage 是怎么加载图片的？用的是 Get 还是 Post ？如果让你实现，你会选择 Get 还是 Post ？ 6、HTTPS 流程是怎么样的？（画一下客户端、服务器的时序图） 7、加密算法，对称加密和非对称加密？ 8、如何理解 OC 是动态语言？ 9、Runtime？用 Runtime 做过什么？ 10、Runloop？内部实现原理？跟自己写个 for 循环有没有区别？ 11、内存管理？内存优化？ 12、卡顿？ 13、多线程？用 GCD 实现同步多个异步调用（a，b），然后再同步执行（c，d） 14、从点击 App 图标，到显示界面流程？ 15、组件化？ 16、编译过程？某一个东西是属于哪一步骤的？ 17、微信支付流程（客户端、微信 SDK 、自己服务器、微信服务器时序图） 18、RN、Week？内部是怎么用 JS 调用原生的？ 19、日志记录？ 20、遇到的闪退？Bug？ 21、竞争同一个资源？ 22、进程线程与 App 的关系。 23、Git rebase","link":"/微店面试题及答案/"},{"title":"新浪乐居面试题","text":"新浪乐居面试题 笔试题笔试题 一面1、类方法和实例方法有什么区别？ 2、用封装的类方法去请求网络会有什么问题？ 3、说一下单例。单例的作用是什么？为什么不能多次创建对象？ 4、说一下 ARC、MRC，有什么区别？有啥优缺点？ 5、自动释放池的使用场景？耗内存时需要加到池子里。 6、沙盒目录除了 Documents 还有啥？Cache 和 Temp 有什么区别？ SDWebImage是在Library下的Caches里 7、项目里用地图了吗？如果用系统的地图会有一个问题，电量急速下降，遇到过这个问题吗？ 8、都有哪些可能循环引用？ 9、说一下从网络请求回来的数据怎么存？数据持久化的方法。数据库是存在沙盒的哪个目录？我说在 Documents 中。 10、assign 与 weak 区别？ 11、笔试题19的答案为什么是2、5？ 12、说一下冒泡排序的思路？ 13、GCD 需要注意什么？我说了一下使用场景。 14、Runtime、Runloop 了解吗？（说了一下消息发送和消息转发的流程）Runloop 有哪些 Mode？（说了3个，面试官说能用的到的就这三个。。其他俩点进去也看不着）说一下 CommonMode ？ 15、最后一个问题：类似简历 右上角是图片（宽高已知） 左边是一段文字 文字会包裹着图片，问实现思路？ 说了三个思路：（1）计算一下上边 label 宽高，左边用一个 label 显示，下边多余的字也用另一个 label 显示。 （2）YYText 可能有处理办法，算是第三方。 （3）他提示底层一点的，我说绘制。 二面1、了解项目，问在公司干啥。 2、AutoLayout 和 Masonry 有什么区别？ 3、面向对象在 OC 中的体现？封装、继承、多态。你觉得最主要的是面向对象的哪个特性？ 4、你对 H5、原生交互的看法。我说了实现方式后，他说不要实现细节，就你的看法。我又说了阿里是大前端，他说不要说阿里，你的看法呢？我说活动页用H5，其他用原生，可能效率高。 5、Block 和 delegate 的使用场景差异？ 6、你觉得开发一个项目难点在哪儿？ 7、其他问题：薪水能商量吗？有什么要问我的？","link":"/新浪乐居面试题/"},{"title":"滴滴笔试题","text":"滴滴笔试题 笔试题0.姓名？日期。 1.C语言实现字符串反转：void reverse(char *str, int length) {} 2.实现一个字符串数组去重函数。 3.描述OC中对象的实现原理。 4.编写代码，实现 NSObject 中添加一个属性 p1 5.KVO 的实现原理和注意事项。 6.下面的代码有哪些问题？ 123456789101112131415@interface Demo : NSObject@property (nonatomic, assign) BOOL *p1;@property (nonatomic, strong) NSString *p2;@end@implementation Demo@dynamic p1;- (void)setP2:(NSString *)p2;{ self.p1 = YES; self.p2 = p2;}@end 7.JS 和 Native 的通讯方式。 8.网络5层模型是哪5层？ 9.把t1表中 name 为 mike 的记录中 status 值改为1 10.常用的 Linux 命令。 11.用过的包/库管理工具。","link":"/滴滴笔试题/"},{"title":"美团面试题及答案","text":"美团面试题 1、Block 的底层原理，结构，内存以及需要注意的地方。2、图片渲染，一张 png/jpg 格式的图片渲染到页面上显示有哪些流程。png 和 jpg 的区别。png 一定是无损的吗？3、Runtime。4、Runloop 的结构和循环流程，用 Runloop 做过什么事情。5、多线程，NSOperationQueue 和 GCD 的区别。用多线程做过什么事情。线程安全的问题。加锁有几种方式。6、NSURLSession 和 NSURLConnection 的区别， NSURLConnection 是怎么封装的。CFNetwork。7、做过什么动画。8、HTTPS 的工作原理，和 HTTP 的区别。RSA 加密原理。9、网络层级，TCP 和 UDP 的区别。10、SDWebImage 的框架结构，缓存机制。11、Git 的 rebase 的原理。Git 流程。12、对组件化的了解，组件化是为了解决什么问题。13、JSPatch 的原理。14、单例是为了处理什么问题而使用的，单例和全局变量的区别。15、对设计模式的掌握。16、分层打印二叉树。","link":"/美团面试题及答案/"},{"title":"苏宁面试题","text":"苏宁面试题 1. 笔试题1.1 冒泡排序Objective-C 实现如下：1234567891011121314- (void)bubbleSort:(NSMutableArray *)array { for (int i = 0; i &lt; array.count; i++) { for (int j = 0; j &lt; array.count-1-i; j++) { NSInteger left = [array[j] integerValue]; NSInteger right = [array[j+1] integerValue]; if (left &lt; right) { [array exchangeObjectAtIndex:j withObjectAtIndex:j+1]; } } } NSLog(@&quot;%@&quot;,array);} 参考链接：【算法】冒泡排序 1.2 二分查找Swift实现如下：123456789101112131415func binarySearch&lt;T: comparable&gt;(_a: [T], key: T) -&gt; Int? { var lowerBound = 0 var upperBound = a.count while lowerBound &lt; upperBound { let midIndex = lowerBound + (upperBound - lowerBound) / 2 if a[midIndex] == key { return midIndex } else if a[midIndex] &lt; key { lowerBound = midIndex + 1 } else { upperBound = midIndex } } return nil} 参考链接：【算法】二分查找 1.3 合并两个数组去重参考链接：【算法】合并两个数组并去重 1.4 两个大数相加参考链接：大数相加算法 2. 一面2.1 SDWebImage 的缓存机制？LRU 说一下。SDWebImage加载图片拿到url会先把url的MD5值作为key从内存中查找，如果内存中有，则直接取图片显示；如果内存中没有，会从磁盘中查找。磁盘中没有，会走下载流程。LRU 最近最少使用。缓存容量满时，会先清理最近最少的缓存。 2.2 数据库升级，比如从 1.0 升级到 2.0，增加了字段。做好兼容处理。 2.3 性能优化2.3.1 优化启动时间 将一些耗时操作延迟执行。比如SDK的初始化，界面的创建。 不能延迟执行的，尽量放到后台执行。比如数据读取，原始 JSON 数据转对象，日志发送。 减少动态库、合并动态库，定期清理不必要的动态库。 减少类、分类的数量，合并Category和功能类似的类。删除不必要的方法和类、分类。 将不必须在+load中做的事延时到+initialize中。 2.3.2 减少CPU、GPU资源消耗 cell复用，header、footer复用。 尽量把view设置不透明。 减少视图的层级。 尽量避免调整视图层次、添加和移除视图。 合理选择加载图片的方式，UIImage imageNamed: ImageAssets 用于多个地方重复使用，UIImage imageWithContentsOfFile 一般用在图片数据很大，一般不需要多次使用的情况。 图片大小最好和UIImageView的大小相同。 不要阻塞主线程，耗时操作放在子线程进行。 懒加载。 缓存，缓存图片SDWebImage，缓存行高，NSCache缓存。 复用高开销对象NSDateFormatter和NSCalendar。 减少离屏渲染，优化圆角、阴影。 使用正确的数据存储。 2.3.3 内存优化 减少内存泄漏。 降低内存使用峰值。 懒加载。 灵活运用图片和文件加载。 拉长文件处理机制，逐步处理文件。 2.3.4 耗电优化耗电功率是个比较综合的指标，影响因素很多。密集的网络请求，长链接，密集的CPU操作（比如大量的复杂计算）都会使耗电功率增加。网络状况（流畅的Wi-Fi还是信号不好的3G）都会影响。 优化网络。 减少、压缩网络数据。 若多次网络请求结果相同，尽量使用缓存。 网络不可用时，不进行网络请求。 优化CPU、GPU消耗。 优化I/O操作，使用dispatch_io。 定位优化 尽量降低定位精度，如不要使用精度最高的KCLLocationAccuracyBest。 如果只是需要快速确定用户位置，用 CLLocationManager 的 requestLocation 方法定位，定位完成后，定位硬件会自动断电。 2.4 Git 开发流程。 master develop dev-xx 具体开发人员分支 开发完成后发起PR。项目提审打Tag 2.5 微信登录流程。注册微信的AppKey与AppSecret。使用微信SDK方法调起微信，回调拿到一些参数，把包含openId等协定好的参数传给服务器，由服务器判断该用户是否注册过，如果注册过，返回登录成功后的用户相关信息。 2.6 WebView 与 JS 交互。H5调用原生采用拦截协议的方式。执行JS方法：evaluateScript也可以使用JSBridge等方式。 2.7 说一下Runloop，苹果设计 Runloop 的初衷是什么？Runloop 运行循环。让线程在有任务的时候忙任务，没任务的时候休眠。参考链接：【iOS 开发】RunLoop 总结 2.8 Delegate代理用assign修饰。 2.9 GCD参考链接：GCD 的 API 2.10 深拷贝与浅拷贝深拷贝是拷贝整个对象。浅拷贝只拷贝对象的指针。copy用于修饰NSArray、NSDictionary、NSString。如果=右边赋值的对象是可变的，copy是深拷贝，拷贝对象的本身。如果赋值的对象是不可变的，copy是浅拷贝，只拷贝对象的指针。用copy和用strong的区别？用copy更安全，避免赋的值是可变的。如果能确保赋的值是不可变的，那么用strong和用copy都是浅拷贝，copy只是多了一个判断，判断可变还是不可变，其他是一样的。NSMutableArray、NSMutableDictionary用Strong修饰，如果用copy，就会拷贝一份，变成不可变的，如果增删数据，就会发生错误。 2.11 进程间通信URL Schemes 2.12 线程间通信，两个线程怎么切换？performSelectorOnThread 2.13 多态多态（Polymorphism）按字面的意思就是“多种状态”。在面向对象语言中，接口的多种不同的实现方式即为多态。子类继承父类后，子类重写父类的方法，实现多态。 2.14 HTTP 三次握手，四次挥手。3. 二面3.1 有没有复杂点的页面。3.2 （这个部门是做智能硬件的）蓝牙有哪些API。3.3 播放音频，展示音频的曲线，具体怎么做？4. 三面","link":"/苏宁面试题及答案/"},{"title":"高思教育笔试题","text":"高思教育笔试题 笔试题（部分）3.下面代码输出什么？ 1234567int a = 0;void (^foo)(void) = ^{ a = 1; NSLog(@\"inner a=%d\",a);};foo();NSLog(@\"outer a=%@\",a); 4.下面代码输出什么？ 123456789- (void)viewDidLoad{ [super viewDidLoad]; NSLog(@\"1\"); dispatch_sync(dispatch_get_main_queue(),^{ NSLog(@\"2\"); }); NSLog(@\"3\");} 5.什么情况使用 weak 关键字，相比 assign 有什么不同？ 6.@property 中有哪些属性关键字？/ @property 后面可以有哪些修饰符？ 7.@synthesize 和 @dynamic 分别有什么作用？ 8.什么时候会报 unrecognized selector 的异常？ 9.能否想编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？ 10.如何用 GCD 同步若干异步调用？dispatch_barrier_async 的作用是什么？ 11.如何手动触发一个 value 的 KVO 12.Native 的 Web（WK/UI）控件和 js 的交互是如何实现的？（nativejs） 13.JavaScriptCore 框架中，native 如何调用 js？反之，js如何调用native？ 14.有阅读 Weex、ReactNative 或者 Cordova 框架的描述其一即可。","link":"/高思教育笔试题/"},{"title":"高思教育面试题","text":"高思教育面试题 笔试题笔试题 一面1、@property 本质是什么？NSString 为什么用 Copy，用 Strong 行不行？ 2、block 为什么用 copy ？ 3、block 和代理你用的哪个多？各有什么特点？ 4、GCD 的两个队列（串行、并行）有了解吗？从字面意思看，你觉得这俩哪个效率高，哪个（占空间）忘记了问的啥指标了。。 5、（说一下你的项目吧）看到我的酒店 App，问类似网易新闻那种滑动切换页面你是怎么做的？我说是一个 scrollView，点击按钮后滚动到指定的 index。他说的顶部按钮是3个，如果是30个呢，会有什么问题？他说如果1个页面占用5M，30个页面就占用5x30M，会有内存问题，怎么解决这个问题？我说看过别人写的，用的是子控制器，把这些页面加到当前控制器的子控制器中。（现在想想我也是这么做的。。但是没说是这么做） 6、AFN内部看过吗？AFN的5个模块。 大概这时候问，你觉得自己是什么级别的？（中级） 7、说一下响应者链。 8、一个约束题。 9、项目不忙的时候做过什么优化？（我说用 Instruments 分析过内存泄漏）他说发现过什么问题？（发现过 NSTimer 定时器有内存泄漏）他说那考虑用什么替换定时器呢？（我说没有替换它，退出这个页面的时候关掉了 Timer） 还做过什么优化？（忘记咋回答了） 10、（不知道问啥我的回答是野指针）然后就问野指针是啥？指针指向的那块地址（忘记了。。）如果又有其他指针指向了这块内存，会怎么样（他好像说会闪退） 12、斐波那切数列 0 1 2 3 4 5… 1 1 2 3 5 8 13 21 求n f(n) = f(n-1) + f(n-2) 复试1、怎么学的 iOS ？为什么没搞 Java 2、介绍公司情况，人员规模，介绍项目 3、说一下项目中遇到的问题，怎么解决的？ 4、说一下内存管理，怎么检测内存泄漏的？ 5、你用 OC 开发还是 Swift ？你觉得两者有啥不同？ 6、金融 App 应该有一些安全措施吧？你们是怎么做的？ 7、TCP 和 UDP 有啥区别？ 8、TCP 几次握手？过程是怎么样的？ 9、Post 请求和 Get 请求有啥区别？ 10、数据持久化都有哪些？ 11、AFN 的实现原理？SDWebImage 的实现原理？哪些存在内存，哪些存在磁盘？ 12、两个网络请求有依赖关系时，怎么处理的？ 13、同步、异步 串行、并行 14、几张图合成一张图 15、说一下 Runloop 16、KVO 的实现原理 17、不使用中间变量 实现交换两个数 swap(a, b) 18、copy 关键字修饰什么？ 19、类的私有属性，怎么设置属性值？我答了 KVC 他提到了 Runtime 20、有没有做过音频的处理？类似唱吧把原唱关掉。 21、动画了解的怎么样？ 22、了解 ARKit 吗？ 23、数据结构和算法你怎么样？冒泡排序，选择排序？","link":"/高思教育面试题/"},{"title":"美团面试题","text":"美团面试题 1、Block 的底层原理，结构，内存以及需要注意的地方。 2、图片渲染，一张 png/jpg 格式的图片渲染到页面上显示有哪些流程。png 和 jpg 的区别。png 一定是无损的吗？ 3、Runtime。 4、Runloop 的结构和循环流程，用 Runloop 做过什么事情。 5、多线程，NSOperationQueue 和 GCD 的区别。用多线程做过什么事情。线程安全的问题。加锁有几种方式。 6、NSURLSession 和 NSURLConnection 的区别， NSURLConnection 是怎么封装的。CFNetwork。 7、做过什么动画。 8、HTTPS 的工作原理，和 HTTP 的区别。RSA 加密原理。 9、网络层级，TCP 和 UDP 的区别。 10、SDWebImage 的框架结构，缓存机制。 11、Git 的 rebase 的原理。Git 流程。 12、对组件化的了解，组件化是为了解决什么问题。 13、JSPatch 的原理。 14、单例是为了处理什么问题而使用的，单例和全局变量的区别。 15、对设计模式的掌握。 16、分层打印二叉树。","link":"/美团面试题/"},{"title":"滴滴面试题","text":"滴滴面试题 笔试题笔试题 滴滴一面看了一下笔试题的答案，第一题 C 语言字符串反转打印了一下 1、说一下你觉得项目中遇到了什么印象深刻的问题，你是怎么解决的？ 2、大学里学了哪些课？信息管理与信息系统专业是哪个学院的？ 3、项目里的网络请求用到了网络5层模型的哪些，TCP/IP 属于哪一层？HTTP 呢？ 4、你觉得自己是什么级别的？优势和不足主要是哪方面？ 5、GCD 平时项目里怎么用的？我提到了回到主线程操作 UI 需要 dispatch_get_mainQueue 6、为什么操作 UI 需要在主线程？ 7、哪些是你独立开发的项目？ 8、问了一下上家公司的情况 9、之后有什么打算？ 10、上家薪资多少？你还有啥想问的吗？ 滴滴二面1、自定义封装控件需要注意什么？有什么规范？ 2、说一下你了解的设计模式。 3、数据库怎么优化？我说数据量大的话加索引提升查询效率。问其他优化呢？比如数据库大小有没有做过优化？ 4、内存优化是怎么做的？我提到了内存泄漏。什么情况会发生内存泄漏？ 5、App 启动时间优化？ 6、视图做过哪些优化，我提了 TableView。那就以 TableView 说一下优化了哪些方面？ 7、AFNetworking 内部是怎么样的一个过程？ 8、你还有什么想问我的？","link":"/滴滴面试题/"},{"title":"滴滴出行面试题","text":"滴滴出行面试题 1. 笔试题0.姓名？日期。 1.C语言实现字符串反转：void reverse(char *str, int length) {} 123456789101112131415void reverse(char *str, int length) { char *start, *end, t; start = str; end = &amp;str[length - 1]; while(start &lt; end) { t = *start; *start = *end; *end = t; start++; end--; } for (int i = 0; str[i]; i++) { printf(\"%c\",str[i]); }} 2.实现一个字符串数组去重函数。 123456789101112var str_arr = [\"b\",\"c\",1,\"a\", 3,\"v\", \"2\",\"e\", \"6\",\"g\", \"9\", \"arr\",9, \"hello\",\",6\", \"9\", \"1\", 2, 6, \"b\", \"c\"];function unique(arr) { var map = {}, array = []; for (var i = 0; i &lt; arr.length; i++) { var key = arr[i] + typeof arr[i]; if (map[key] == null) { map[key] = true; array.push(arr[i]); } } return array;} 3.描述OC中对象的实现原理。 12345@interface NSObject { Class isa;}@endtypedef struct objc_class *Class; NSObject对象内部存放了一个名叫isa的指针，指向了一个结构体struct objc_class 一个NSObject对象占用多少内存？ 1）系统分配了16字节给NSObject对象（通过malloc_size函数可以获得） 2）NSObject对象内部只使用了8个字节的空间，用来存放isa指针变量（64位系统下，可以通过class_getInstanceSize函数获得） 4.编写代码，实现 NSObject 中添加一个属性 p1 12345678910111213141516171819202122@interface NSObject (TestProperty)@property (nonatomic, copy) NSString *p1;@end #import &quot;NSObject+TestProperty.h&quot;#import &lt;objc/runtime.h&gt;@implementation NSObject (TestProperty)- (void)setP1:(NSString *)p1 { objc_setAssociatedObject(self, @selector(p1), p1, OBJC_ASSOCIATION_RETAIN_NONATOMIC);}- (NSString *)p1 { objc_getAssociatedObject(self, @selector(p1));}@end 5.KVO 的实现原理和注意事项。 1) 利用RuntimeAPI动态生成一个子类，并且让instance对象的isa指向这个全新的子类2) 当修改instance对象的属性时，会调用Foundation的_NSSetXXXValueAndNotify函数 1234willChangeValueForKey:父类原来的setterdidChangeValueForKey:内部会触发监听器（Oberser）的监听方法( observeValueForKeyPath:ofObject:change:context:） 注意事项：需要调用set方法触发KVO 6.下面的代码有哪些问题？ 123456789101112131415@interface Demo : NSObject@property (nonatomic, assign) BOOL *p1;@property (nonatomic, strong) NSString *p2;@end@implementation Demo@dynamic p1;- (void)setP2:(NSString *)p2;{ self.p1 = YES; self.p2 = p2;}@end BOOL p1不应该带*。 self.p2 = p2; 调用set方法死循环。 p1没有set方法。 7.JS 和 Native 的通讯方式。 方法一：拦截URL 方法二：注册OC与JS方法 12345678910111213141516171819202122232425262728- （void）webViewDidFinishLoad:(UIWebView *)webView { // 获取当前网页的标题 NSString *titleStr = [webView stringByEvaluatingJavaScriptFromString:@&quot;document.title&quot;]; NSLog(@&quot;%@&quot;,titleStr); // 还可以直接调用js定义的方法 // 比如getShareUrl()为js端定义好的方法，返回值为分享的url // 我们就可以通过调用这个方法在returnStr中拿到js返回的分享地址 NSString *returnStr = [webView stringByEvaluatingJavaScriptFromString:@&quot;getShareUrl()&quot;]; NSLog(@&quot;%@&quot;,returnStr); // 还可以为js端提供完整的原生方法供其调用（记得导入#import ） JSContext *context = [webView valueForKeyPath:@&quot;documentView.webView.mainFrame.javaScriptContext&quot;]; // 可以定义供js调用的方法, testMethod为js调用的方法名 context[@&quot;testMethod&quot;] = ^() { dispatch_async(dispatch_get_main_queue(), ^{ UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@&quot;&quot; message:@&quot;js调用方法&quot; delegate:nil cancelButtonTitle:@&quot;取消&quot; otherButtonTitles:nil, nil]; [alert show]; }); }; 方法三：桥接机制 OC和JS交互的桥接机制，主要包含3个类，JS端window.WebViewJavascriptBridge，OC端WebViewJavascriptBridge和WebViewJavascriptBridgeBase。 桥接类支持JS调用OC方法，OC调用JS方法。JS调用OC通过重定向url并取handlerName来调用，OC调用JS通过stringByEvaluatingJavaScriptFromString调用。 8.网络5层模型是哪5层？ 应用层、传输层、网络层、数据链路层、物理层 9.把t1表中 name 为 mike 的记录中 status 值改为1 1update t1 set status = 1 where name = mike 10.常用的 Linux 命令。 cd 进入指定的目录 cd .. 返回上一级目录 ls 查看当前目录下的所有的目录与文件名 touch filename 表示创建一个文件 mkdir dirname 表示创建一个目录 rm filename 表示删除一个文件 rm -rf dirname 表示删除该目录及其所有的子级目录一起删掉 ctrl+c 强制终止，不会终止进程 sudo 以管理员身份运行上一个命令 :q 退出 :q! 强制退出 :wq 保存并退出 11.用过的包/库管理工具。 CocoaPods 2. 一面1、说一下你觉得项目中遇到了什么印象深刻的问题，你是怎么解决的？ 2、大学里学了哪些课？信息管理与信息系统专业是哪个学院的？ 3、项目里的网络请求用到了网络5层模型的哪些，TCP/IP 属于哪一层？HTTP 呢？ TCP/IP属于传输层 HTTP属于应用层 4、你觉得自己是什么级别的？优势和不足主要是哪方面？ 5、GCD 平时项目里怎么用的？ dispatch_get_mainQueue：获取主线程 dispatch_sync：同步操作 dispatch_group：线程同步 dispatch_barrier：多读单写 dispatch_semaphore：加锁，控制并发数 dispatch_once：只执行一次 dispatch_after：延时执行 6、为什么操作 UI 需要在主线程？ 因为UIKit不是线程安全的。如果不在主线程中操作UI，可能会造成如下的情况：（1）两个线程同时设置同一个背景图片，那么很有可能因为当前图片被释放了两次而导致应用崩溃。（2）两个线程同时设置同一个UIView的背景颜色，那么很有可能渲染显示的是颜色A，而此时在UIView逻辑树上的背景颜色属性为B。（3）两个线程同时操作view的树形结构：在线程A中for循环遍历并操作当前View的所有subView，然后此时线程B中将某个subView直接删除，这就导致了错乱还可能导致应用崩溃。虽然，iOS4之后苹果将大部分绘图的方法和诸如 UIColor 和 UIFont 这样的类改写为了线程安全可用，但是仍然强烈建议将UI操作保证在主线程中执行。 7、哪些是你独立开发的项目？ 8、问了一下上家公司的情况 9、之后有什么打算？ 10、上家薪资多少？你还有啥想问的吗？ 3. 二面1、自定义封装控件需要注意什么？有什么规范？ 头文件尽量不要过多引入其他的类,解耦合 如果使用了第三方框架, 不要在头文件引入改类 切记, 不要暴露第三方组件的任何属性,枚举等等 定义该类的常量,方便修改 尽量不要引入其他项目中的类,除了一些必要的分类,业务类尽量不要引入 Frame布局 使用分类 UIView+Helper 尽量不要暴露成员变量或者属性,除非有必要, 其余情况最好提供接口进行操作. 注意属性的可读。 封装的工具类 注意如果是分类可以实现的尽量迁移到分类中, 并且命名 最好以dd_ 开头, 例如-(void)dd_layoutWithDirection:(DDImageDirection)imageDirection ,之所以这样是因为,OC没有命名空间,后加载的分类可以覆盖掉前面的同名方法. 而且一旦和系统方法重名将造成巨大的bug 注意 驼峰命名原则,类,协议,代理属性，命名首字母大写,最好添加DD类前缀 2、说一下你了解的设计模式。 设计模式的六大原则 1、开闭原则（Open Close Principle） 开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。 2、里氏代换原则（Liskov Substitution Principle） 里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。 3、依赖倒转原则（Dependence Inversion Principle） 这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。 4、接口隔离原则（Interface Segregation Principle） 这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。 5、迪米特法则，又称最少知道原则（Demeter Principle） 最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。 6、合成复用原则（Composite Reuse Principle） 合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。 设计模式 装饰模式、工厂模式、单例模式、观察者模式、备忘录模式。 3、数据库怎么优化？我说数据量大的话加索引提升查询效率。问其他优化呢？比如数据库大小有没有做过优化？ （1）根据服务层面：配置mysql性能优化参数； （2）从系统层面增强mysql的性能：优化数据表结构、字段类型、字段索引、分表，分库、读写分离等等。 （3）从数据库层面增强性能：优化SQL语句，合理使用字段索引。 （4）从代码层面增强性能：使用缓存和NoSQL数据库方式存储，如MongoDB/Memcached/Redis来缓解高并发下数据库查询的压力。 （5）减少数据库操作次数，尽量使用数据库访问驱动的批处理方法。 （6）不常使用的数据迁移备份，避免每次都在海量数据中去检索。 （7）提升数据库服务器硬件配置，或者搭建数据库集群。 （8）编程手段防止SQL注入：使用JDBC PreparedStatement按位插入或查询；正则表达式过滤（非法字符串过滤）； 4、内存优化是怎么做的？什么情况会发生内存泄漏？ 减少内存泄漏。 降低内存使用峰值。 懒加载。 灵活运用图片和文件加载。 拉长文件处理机制，逐步处理文件。 5、App 启动时间优化？ 将一些耗时操作延迟执行。比如SDK的初始化，界面的创建。 不能延迟执行的，尽量放到后台执行。比如数据读取，原始 JSON 数据转对象，日志发送。 减少动态库、合并动态库，定期清理不必要的动态库。 减少类、分类的数量，合并Category和功能类似的类。删除不必要的方法和类、分类。 将不必须在+load中做的事延时到+initialize中。 6、视图做过哪些优化，我提了 TableView。那就以 TableView 说一下优化了哪些方面？ cell复用，header、footer复用。 尽量把view设置不透明。 减少视图的层级。 尽量避免调整视图层次、添加和移除视图。 合理选择加载图片的方式，UIImage imageNamed: ImageAssets 用于多个地方重复使用，UIImage imageWithContentsOfFile 一般用在图片数据很大，一般不需要多次使用的情况。 图片大小最好和UIImageView的大小相同。 不要阻塞主线程，耗时操作放在子线程进行。 懒加载。 缓存，缓存图片SDWebImage，缓存行高，NSCache缓存。 复用高开销对象NSDateFormatter和NSCalendar。 减少离屏渲染，优化圆角、阴影。 使用正确的数据存储。 7、AFNetworking 内部是怎么样的一个过程？ 8、你还有什么想问我的？","link":"/滴滴出行面试题及答案/"}],"tags":[{"name":"面试","slug":"面试","link":"/tags/面试/"},{"name":"开果","slug":"开果","link":"/tags/开果/"},{"name":"面试题","slug":"面试题","link":"/tags/面试题/"},{"name":"好未来","slug":"好未来","link":"/tags/好未来/"},{"name":"ofo","slug":"ofo","link":"/tags/ofo/"},{"name":"京东","slug":"京东","link":"/tags/京东/"},{"name":"微店","slug":"微店","link":"/tags/微店/"},{"name":"滴滴","slug":"滴滴","link":"/tags/滴滴/"},{"name":"笔试题","slug":"笔试题","link":"/tags/笔试题/"},{"name":"美团","slug":"美团","link":"/tags/美团/"},{"name":"苏宁","slug":"苏宁","link":"/tags/苏宁/"},{"name":"高思教育","slug":"高思教育","link":"/tags/高思教育/"}],"categories":[{"name":"面试题","slug":"面试题","link":"/categories/面试题/"}]}